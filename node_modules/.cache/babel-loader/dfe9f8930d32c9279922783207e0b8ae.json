{"ast":null,"code":"import { Element, render, setAttr } from './Element';\nvar allPatches;\nvar index = 0; // 默认哪个需要打补丁\n\nfunction patch(node, patches) {\n  allPatches = patches;\n  walk(node); // 给某个元素打补丁\n}\n\nfunction walk(node) {\n  var current = allPatches[index++];\n  var childNodes = node.childNodes; // 深度先序\n\n  childNodes.forEach(function (child) {\n    return walk(child);\n  });\n\n  if (current) {\n    doPatch(node, current);\n  }\n}\n\nfunction doPatch(node, patches) {\n  patches.forEach(function (patch) {\n    switch (patch.type) {\n      case 'ATTRS':\n        for (var key in patch.attrs) {\n          var value = patch.attrs[key];\n\n          if (value) {\n            setAttr(node, key, value);\n          } else {\n            node.removeAttribute(key);\n          }\n        }\n\n        break;\n\n      case 'TEXT':\n        node.textContent = patch.text;\n        break;\n\n      case 'REPLACE':\n        var newNode = patch.newNode instanceof Element ? render(patch.newNode) : document.createTextNode(patch.newNode);\n        node.parentNode.replaceChild(newNode, node);\n        break;\n\n      case 'REMOVE':\n        node.parentNode.removeChild(node);\n        break;\n\n      default:\n        break;\n    }\n  });\n}\n\nexport default patch;","map":{"version":3,"sources":["/Users/xs/technology-research/VirtualDom/src/Patch.js"],"names":["Element","render","setAttr","allPatches","index","patch","node","patches","walk","current","childNodes","forEach","child","doPatch","type","key","attrs","value","removeAttribute","textContent","text","newNode","document","createTextNode","parentNode","replaceChild","removeChild"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,QAAyC,WAAzC;AAEA,IAAIC,UAAJ;AACA,IAAIC,KAAK,GAAG,CAAZ,C,CAAgB;;AAEhB,SAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC1BJ,EAAAA,UAAU,GAAGI,OAAb;AAEAC,EAAAA,IAAI,CAACF,IAAD,CAAJ,CAH0B,CAI1B;AACH;;AAED,SAASE,IAAT,CAAcF,IAAd,EAAoB;AAChB,MAAIG,OAAO,GAAGN,UAAU,CAACC,KAAK,EAAN,CAAxB;AACA,MAAIM,UAAU,GAAGJ,IAAI,CAACI,UAAtB,CAFgB,CAIhB;;AACAA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAAAC,KAAK;AAAA,WAAIJ,IAAI,CAACI,KAAD,CAAR;AAAA,GAAxB;;AAEA,MAAIH,OAAJ,EAAa;AACTI,IAAAA,OAAO,CAACP,IAAD,EAAOG,OAAP,CAAP;AACH;AACJ;;AAED,SAASI,OAAT,CAAiBP,IAAjB,EAAuBC,OAAvB,EAAgC;AAC5BA,EAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAN,KAAK,EAAI;AACrB,YAAQA,KAAK,CAACS,IAAd;AACI,WAAK,OAAL;AACI,aAAK,IAAIC,GAAT,IAAgBV,KAAK,CAACW,KAAtB,EAA6B;AACzB,cAAIC,KAAK,GAAGZ,KAAK,CAACW,KAAN,CAAYD,GAAZ,CAAZ;;AACA,cAAIE,KAAJ,EAAW;AACPf,YAAAA,OAAO,CAACI,IAAD,EAAOS,GAAP,EAAYE,KAAZ,CAAP;AACH,WAFD,MAEO;AACHX,YAAAA,IAAI,CAACY,eAAL,CAAqBH,GAArB;AACH;AACJ;;AACD;;AACJ,WAAK,MAAL;AACIT,QAAAA,IAAI,CAACa,WAAL,GAAmBd,KAAK,CAACe,IAAzB;AACA;;AACJ,WAAK,SAAL;AACI,YAAIC,OAAO,GAAIhB,KAAK,CAACgB,OAAN,YAAyBrB,OAA1B,GAAqCC,MAAM,CAACI,KAAK,CAACgB,OAAP,CAA3C,GAA6DC,QAAQ,CAACC,cAAT,CAAwBlB,KAAK,CAACgB,OAA9B,CAA3E;AACAf,QAAAA,IAAI,CAACkB,UAAL,CAAgBC,YAAhB,CAA6BJ,OAA7B,EAAsCf,IAAtC;AACA;;AACJ,WAAK,QAAL;AACIA,QAAAA,IAAI,CAACkB,UAAL,CAAgBE,WAAhB,CAA4BpB,IAA5B;AACA;;AACJ;AACI;AAtBR;AAwBH,GAzBD;AA0BH;;AAED,eAAeD,KAAf","sourcesContent":["import { Element, render, setAttr } from './Element';\n\nlet allPatches;\nlet index = 0;  // 默认哪个需要打补丁\n\nfunction patch(node, patches) {\n    allPatches = patches;\n\n    walk(node);\n    // 给某个元素打补丁\n}\n\nfunction walk(node) {\n    let current = allPatches[index++];\n    let childNodes = node.childNodes;\n\n    // 深度先序\n    childNodes.forEach(child => walk(child));\n\n    if (current) {\n        doPatch(node, current);\n    }\n}\n\nfunction doPatch(node, patches) {\n    patches.forEach(patch => {\n        switch (patch.type) {\n            case 'ATTRS':\n                for (let key in patch.attrs) {\n                    let value = patch.attrs[key];\n                    if (value) {\n                        setAttr(node, key, value);\n                    } else {\n                        node.removeAttribute(key);\n                    }\n                }\n                break;\n            case 'TEXT':\n                node.textContent = patch.text;\n                break;\n            case 'REPLACE':\n                let newNode = (patch.newNode instanceof Element) ? render(patch.newNode) : document.createTextNode(patch.newNode);\n                node.parentNode.replaceChild(newNode, node);\n                break;\n            case 'REMOVE':\n                node.parentNode.removeChild(node);\n                break;\n            default:\n                break;\n        }\n    });\n}\n\nexport default patch;"]},"metadata":{},"sourceType":"module"}